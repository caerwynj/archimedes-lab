REM >grayl
REM generate all n-tuples in gray binary code (loopless)
REM TAOCP 7.2.1.1 Algorithm L.
DIM code 256
j=9
n=8
base=7
f=6
FOR pass = 0 TO 3 STEP 3
P%=code
[ 
        OPT pass
        B start
.digits EQUD &0
        EQUD &0
.focus  EQUD &0
        EQUD &0
.start  STMFD R13!,{R14}        ; Initialize.
        ADR base,digits         ; Address of digits array
        ADR f,focus             ; Address of focus pointers
        MOV n,#4                ; Number of digits
        MOV R0,n
.l1     STRB R0,[f,r0]
        SUBS R0,R0,#1
        BPL l1

.l2     MOV R0,base             ; Visit.
        MOV R1,n
        BL visit

.l3     LDRB j,[f]              ; Choose \(j\). $$j \gets f_0$$
        MOV R1,#0
        STRB R1,[f]
        CMP j,n
        BEQ exit
        ADD R0,j,#1             ; \(j+1\)
        LDRB R1,[f,R0]          ; \(f_j+1\)
        STRB R1,[f,j]           ; \(f_j \gets f_j+1\)
        STRB R0,[f,R0]          ; \(f_j+1 \gets j + 1\)

.l4     LDRB R1,[base,j]        ; Complement coordinate \(j\)
        RSB R1,R1,#1
        STRB R1,[base,j]
        B l2

.exit   LDMFD R13!,{R14}
        MOV PC,R14

.visit  MOV R2,R0               ; Base address is in r0; length in r1.
.v1     LDRB R0,[R2,R1]
        ADD R0,R0,#48
        SWI "OS_WriteC"
        SUBS R1,R1,#1
        BPL v1
        SWI "OS_NewLine"
        MOV PC,R14
]
NEXT pass
CALL code
QUIT
